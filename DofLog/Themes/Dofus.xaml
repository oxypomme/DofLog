<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:DofLog">
    <BitmapImage x:Key="IconPlaceholder" UriSource="placeholder.png" />

    <!--TODO #5 : Custom Slider-->

    <Style x:Key="{x:Type CheckBox}" TargetType="CheckBox">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="{StaticResource TextColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel Orientation="Horizontal">
                        <Image Name="checkboxImage" Source="{StaticResource CheckboxUnchecked}" Width="16" />
                        <ContentPresenter Margin="5,0" Height="16" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="checkboxImage" Property="Source" Value="{StaticResource CheckboxChecked}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ListBox}" TargetType="ListBox">
        <Setter Property="Background" Value="{StaticResource ElementBackgroundColor}" />
        <Setter Property="BorderBrush" Value="{StaticResource ElementBorderColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    </Style>

    <Style x:Key="{x:Type Button}" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource TextColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="button" BorderThickness="1" BorderBrush="{StaticResource ElementBorderColor}" Background="{StaticResource ElementBackgroundColor}" Margin="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="button" Property="Background" Value="{StaticResource ElementHoverBackgroundColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ToggleButton}" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="{StaticResource TextColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="button" BorderThickness="1" BorderBrush="{StaticResource ElementBorderColor}" Background="{StaticResource ElementBackgroundColor}" Margin="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="button" Property="Background" Value="{StaticResource ElementCheckedBackgroundColor}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="button" Property="Background" Value="{StaticResource ElementHoverBackgroundColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type Label}" TargetType="Label">
        <Setter Property="Foreground" Value="{StaticResource TextColor}" />
    </Style>

    <Style x:Key="{x:Type TextBlock}" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource TextColor}" />
    </Style>

    <Style x:Key="{x:Type TextBox}" TargetType="TextBox">
        <Setter Property="Foreground" Value="{StaticResource TextColor}" />
        <Setter Property="Background" Value="{StaticResource ElementBackgroundColor}" />
        <Setter Property="BorderBrush" Value="{StaticResource ElementBorderColor}" />
        <Setter Property="Margin" Value="3" />
    </Style>

    <Style x:Key="{x:Type PasswordBox}" TargetType="PasswordBox">
        <Setter Property="Foreground" Value="{StaticResource TextColor}" />
        <Setter Property="Background" Value="{StaticResource ElementBackgroundColor}" />
        <Setter Property="BorderBrush" Value="{StaticResource ElementBorderColor}" />
        <Setter Property="Margin" Value="3" />
    </Style>

    <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
        <Setter Property="Background" Value="{StaticResource ElementBackgroundColor}" />
        <Setter Property="BorderBrush" Value="{StaticResource ElementBorderColor}" />
    </Style>

    <Style x:Key="{x:Type ContextMenu}" TargetType="ContextMenu">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border" Background="{StaticResource ElementBackgroundColor}" BorderThickness="1" BorderBrush="{StaticResource ElementBorderColor}">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuItemBaseStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="_border" BorderThickness="0">
                        <Grid SnapsToDevicePixels="true">
                            <DockPanel Margin="0,2">
                                <ContentPresenter x:Name="Icon" ContentSource="Icon" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Margin="2,0,5,0" />
                                <Path x:Name="GlyphPanel" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Visibility="Collapsed" VerticalAlignment="Center" />
                                <ContentPresenter x:Name="_content" ContentSource="Header" Margin="5,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </DockPanel>
                            <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="100" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom">
                                <Border BorderThickness="1" BorderBrush="{StaticResource ElementBorderColor}" Background="{StaticResource ElementBackgroundColor}">
                                    <ScrollViewer x:Name="SubMenuScrollViewer" CanContentScroll="true" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" Margin="2" KeyboardNavigation.TabNavigation="Cycle" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background" Value="#48ffffff" TargetName="_border" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#80ffffff" TargetName="_border" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="MenuItem.Foreground" Value="#80ffffff" TargetName="_content" />
                        </Trigger>
                        <DataTrigger Binding="{Binding DataContext.IconSource}" Value="{x:Null}">
                            <Setter Property="Icon">
                                <Setter.Value>
                                    <Image Source="{StaticResource IconPlaceholder}" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SubMenuItemBaseStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="_border" BorderThickness="1" BorderBrush="{x:Null}">
                        <Grid SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" MinWidth="32" SharedSizeGroup="IconGroup" />
                                <ColumnDefinition Width="*" MinWidth="30" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="20" />
                            </Grid.RowDefinitions>
                            <ContentPresenter Grid.Column="0" Grid.Row="0" x:Name="Icon" ContentSource="Icon" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16" />
                            <Path Grid.Column="2" Grid.Row="0" x:Name="GlyphPanel" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Visibility="Collapsed" VerticalAlignment="Center" />
                            <ContentPresenter Grid.Column="1" Grid.Row="0" x:Name="_content" ContentSource="Header" Margin="3,3,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Path x:Name="arrow" Grid.Column="3" Margin="0,0,5,0" Width="8" Height="8" Data="F1M568.254,-7.43524L568.159,-7.34277 567.977,-7.52246 546.559,-28.9417 525.484,-28.9417 549.787,-4.63446 557.439,3.01532 557.619,3.19629 550.067,10.7549 525.758,35.0583 546.834,35.0583 568.254,13.6429 578.792,3.10254 568.254,-7.43524z" Stretch="Uniform" Fill="#FFFFFFFF" RenderTransformOrigin="0.5,0.5" />
                            <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="-1" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Right" VerticalOffset="-1">
                                <Border BorderThickness="1" BorderBrush="{StaticResource ElementBorderColor}" Background="{StaticResource ElementBackgroundColor}">
                                    <ScrollViewer x:Name="SubMenuScrollViewer" CanContentScroll="true" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" Margin="2" KeyboardNavigation.TabNavigation="Cycle" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="BorderBrush" Value="#48ffffff" TargetName="_border" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" Value="#80ffffff" TargetName="_border" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="MenuItem.Foreground" Value="#80ffffff" TargetName="_content" />
                            <Setter Property="Fill" Value="#80ffffff" TargetName="arrow" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="MenuItem">
        <Border Background="{x:Null}" x:Name="_grid">
            <Grid  SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="32" SharedSizeGroup="IconGroup" />
                    <ColumnDefinition Width="*" MinWidth="30" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="20" />
                </Grid.RowDefinitions>
                <ContentPresenter ContentSource="Icon" Margin="{TemplateBinding Padding}" Width="16" />
                <ContentPresenter x:Name="_content" Grid.Column="1" Grid.Row="0"  Margin="3,0,32,0" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" />
                <ContentPresenter x:Name="_keybind" Grid.Column="2" Grid.Row="0" Margin="0,0,32,0" VerticalAlignment="Center" ContentSource="InputGestureText" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" Value="#48ffffff" TargetName="_grid" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#80ffffff" TargetName="_grid" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="MenuItem.Foreground" Value="#80ffffff" TargetName="_content" />
                <Setter Property="MenuItem.Foreground" Value="#80ffffff" TargetName="_keybind" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Source : https://blog.jsinh.in/how-to-create-apple-macos-like-scrollbar-in-wpf/-->
    <Style x:Key="ScrollBarTrackThumb"
        TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                        <Border x:Name="CornerScrollBarRectangle" CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Margin="0,1,0,1" Background="{TemplateBinding Background}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="CornerScrollBarRectangle" Property="Width" Value="Auto" />
                            <Setter TargetName="CornerScrollBarRectangle" Property="Height" Value="6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="{StaticResource AccentColor}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot"
                        Width="{TemplateBinding Width}"
                        Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*" />
                        </Grid.RowDefinitions>
                        <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollBarTrackThumb}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Height" Value="8" />
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>